1) В Metaspace идет загрузка класса JvmComprehension (Application ClassLoader). Так как происходит вызов метода, то в Stack добавляется фрейм main(), куда помещается переменная с названием "i", имеющая значение "1";

2) В Metaspace загружается класс Object (этот и последующие классы обозначены как system classes – Bootstrap ClassLoader). В heap попадает новый объект Object и ссылка на него "o" попадает в Stack в фрейме "main";

3) В Metaspace загружается класс Integer (Bootstrap ClassLoader). В фрейм "main()" помещается переменная с названием "ii", имеющая значение "2";

4) Создаётся фрейм в Stack для метода "printAll()", куда помещаются ссылка на значения ссылки "o", находящиеся в heap, и значения "i" и "ii";

5) В фрейм "printAll()" помещается переменная с названием "uselessVar", имеющая значение "700";

6) В Metaspace загружаются системные классы (для вывода в консоль), среди которых System (Bootstrap ClassLoader). Создается новый фрейм "println()", который содержит в себе ссылку на "i", "ii", "o". Создаётся пул строк в heap и фрейм "toString()" для объекта с ссылкой "o", который вернёт значение (конкатенацию строк, которая образуется в пуле строк) в фрейм "println()" для вывода в консоль. Удаление фрейма из стека;

7) В пуле строк создается ссылка на "finished". Создаем новый фрейм в main frame out.println и передаем туда ссылку на объект в "finished". По завершению происходит очистка стека.
